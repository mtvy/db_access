//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: database.proto

package api;

@kotlin.jvm.JvmName("-initializedeleteDbRequest")
inline fun deleteDbRequest(block: api.DeleteDbRequestKt.Dsl.() -> kotlin.Unit): api.DatabaseOuterClass.DeleteDbRequest =
  api.DeleteDbRequestKt.Dsl._create(api.DatabaseOuterClass.DeleteDbRequest.newBuilder()).apply { block() }._build()
object DeleteDbRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    private val _builder: api.DatabaseOuterClass.DeleteDbRequest.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: api.DatabaseOuterClass.DeleteDbRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): api.DatabaseOuterClass.DeleteDbRequest = _builder.build()

    /**
     * <code>string tb = 1;</code>
     */
    var tb: kotlin.String
      @JvmName("getTb")
      get() = _builder.getTb()
      @JvmName("setTb")
      set(value) {
        _builder.setTb(value)
      }
    /**
     * <code>string tb = 1;</code>
     */
    fun clearTb() {
      _builder.clearTb()
    }

    /**
     * <pre>
     * &lt;param1&gt;='&lt;val1&gt;' AND ...
     * </pre>
     *
     * <code>string where = 2;</code>
     */
    var where: kotlin.String
      @JvmName("getWhere")
      get() = _builder.getWhere()
      @JvmName("setWhere")
      set(value) {
        _builder.setWhere(value)
      }
    /**
     * <pre>
     * &lt;param1&gt;='&lt;val1&gt;' AND ...
     * </pre>
     *
     * <code>string where = 2;</code>
     */
    fun clearWhere() {
      _builder.clearWhere()
    }
  }
}
@kotlin.jvm.JvmSynthetic
inline fun api.DatabaseOuterClass.DeleteDbRequest.copy(block: api.DeleteDbRequestKt.Dsl.() -> kotlin.Unit): api.DatabaseOuterClass.DeleteDbRequest =
  api.DeleteDbRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

